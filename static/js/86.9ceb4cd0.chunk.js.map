{"version":3,"file":"static/js/86.9ceb4cd0.chunk.js","mappings":"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","sources":["redux/contacts/operations.js","components/ContactForm/index.jsx","redux/contacts/selectors.js","components/ContactList/index.jsx","pages/Contacts.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst {\n  fetchingInProgress,\n  fetchingSuccess,\n  fetchingError,\n  addingInProgress,\n  addingSuccess,\n  addingError,\n  deletingInProgress,\n  deletingSuccess,\n  deletingError,\n} = require('./contactsSlice');\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => async dispatch => {\n  try {\n    dispatch(fetchingInProgress());\n    const response = await axios.get('/contacts');\n    dispatch(fetchingSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchingError(error.message));\n  }\n};\n\nexport const addNewContact =\n  ({ name, number }) =>\n  async dispatch => {\n    try {\n      dispatch(addingInProgress());\n\n      const newContact = {\n        name,\n        number,\n      };\n      await axios.post('/contacts', newContact);\n      dispatch(addingSuccess(newContact));\n    } catch (error) {\n      dispatch(addingError(error.message));\n    }\n  };\n\nexport const deleteContact = contactId => async dispatch => {\n  try {\n    dispatch(deletingInProgress());\n\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deletingSuccess(contactId));\n  } catch (error) {\n    dispatch(deletingError(error.message));\n  }\n};\n","import Typography from '@mui/joy/Typography/Typography';\nimport { Button, Stack, TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n\n    const contact = {\n      name: e.currentTarget.elements.name.value,\n      number: e.currentTarget.elements.phone.value,\n    };\n\n    dispatch(addNewContact(contact));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Stack spacing={2} direction=\"row\">\n        <Typography color=\"primary\" fontSize=\"lg\" fontWeight=\"lg\">\n          Search your contacts\n        </Typography>\n        <TextField\n          id=\"name\"\n          label=\"Contact name\"\n          type=\"text\"\n          variant=\"filled\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces\"\n        />\n        {/* <label htmlFor=\"name\">\n        Name\n        <input\n          type=\"text\"\n          id=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces\"\n          required\n        />\n      </label> */}\n        <TextField\n          id=\"phone\"\n          label=\"Phone number\"\n          type=\"tel\"\n          variant=\"filled\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n        {/* <label htmlFor=\"phone\">\n        Phone number\n        <input\n          type=\"tel\"\n          id=\"phone\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label> */}\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </Stack>\n      {/* <button type=\"submit\">Add contact</button> */}\n    </form>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import {\n  Avatar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { PersonRounded } from '@mui/icons-material';\nimport { deleteContact } from 'redux/contacts/operations';\nimport styled from '@emotion/styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const deleteItem = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const StyledList = styled(List)({\n    // hover states\n    '& .MuiListItem-root:hover': {\n      backgroundColor: 'orange',\n      '&, & .MuiAvatar-root': {\n        color: 'black',\n      },\n    },\n  });\n\n  return (\n    <div>\n      <StyledList>\n        {contacts.map(item => (\n          <ListItem\n            key={item.id}\n            item={item}\n            secondaryAction={\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={() => deleteItem(item.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            }\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <PersonRounded />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={item.name} secondary={`${item.number}`} />\n          </ListItem>\n        ))}\n      </StyledList>\n      {/* <ul>\n        {contacts\n          // .filter(item =>\n          //   item.name.toLowerCase().includes(filterQuery.toLowerCase())\n          // )\n          .map(item => (\n            <ContactItem key={item.id} item={item} />\n          ))}\n      </ul> */}\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <h3>Your Phonebook contact list:</h3>\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["require","fetchingInProgress","fetchingSuccess","fetchingError","addingInProgress","addingSuccess","addingError","deletingInProgress","deletingSuccess","deletingError","axios","ContactForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","contact","name","currentTarget","elements","value","number","phone","newContact","message","addNewContact","reset","Stack","spacing","direction","Typography","color","fontSize","fontWeight","TextField","id","label","type","variant","title","Button","selectContacts","state","contacts","items","ContactList","useSelector","deleteItem","contactId","StyledList","styled","List","backgroundColor","map","item","ListItem","secondaryAction","IconButton","edge","onClick","Delete","ListItemAvatar","Avatar","PersonRounded","ListItemText","primary","secondary","useEffect","response","data"],"sourceRoot":""}